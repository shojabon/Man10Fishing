apply plugin: 'java'
apply plugin: 'kotlin'

group = "com.shojabon"
version = '1.0-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    embed
    compile.extendsFrom(embed)
}

buildscript {
    ext {
        junit_version = '4.12'
        kotlin_version = '1.7.20'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'sk89q-repo'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.6'
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api fileTree(dir: 'src/main/java/com/shojabon/man10fishing/utils', include: '*.jar')
}

import org.apache.tools.ant.filters.ReplaceTokens


jar {
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}